#include <iostream>
using namespace std;

// Функция для вычисления результата
long long calc_result(int n, int m) {
    long long total = (long long)n * m; // защита от переполнения
    return (total + 1) / 2; // целочисленное деление с округлением вверх
}

// Автотесты
void run_tests() {
    // Тест 1: простое число
    long long r1 = calc_result(3, 3);
    // 3*3 = 9 → (9+1)/2 = 5
    if (r1 == 5) cout << "✅ Тест 1 пройден" << endl;
    else cout << "❌ Тест 1 не пройден (ожидалось 5, получено " << r1 << ")" << endl;

    // Тест 2: чётное произведение
    long long r2 = calc_result(2, 4);
    // 2*4 = 8 → (8+1)/2 = 4
    if (r2 == 4) cout << "✅ Тест 2 пройден" << endl;
    else cout << "❌ Тест 2 не пройден (ожидалось 4, получено " << r2 << ")" << endl;

    // Тест 3: нечётное произведение
    long long r3 = calc_result(5, 3);
    // 5*3 = 15 → (15+1)/2 = 8
    if (r3 == 8) cout << "✅ Тест 3 пройден" << endl;
    else cout << "❌ Тест 3 не пройден (ожидалось 8, получено " << r3 << ")" << endl;

    // Тест 4: одно из чисел = 1
    long long r4 = calc_result(1, 7);
    // 1*7 = 7 → (7+1)/2 = 4
    if (r4 == 4) cout << "✅ Тест 4 пройден" << endl;
    else cout << "❌ Тест 4 не пройден (ожидалось 4, получено " << r4 << ")" << endl;

    // Тест 5: ноль
    long long r5 = calc_result(0, 10);
    // 0*10 = 0 → (0+1)/2 = 0
    if (r5 == 0) cout << "✅ Тест 5 пройден" << endl;
    else cout << "❌ Тест 5 не пройден (ожидалось 0, получено " << r5 << ")" << endl;

    // Тест 6: большие числа (проверка переполнения int)
    long long r6 = calc_result(100000, 100000);
    // 100000*100000 = 10^10 → (10^10+1)/2 = 5000000000
    if (r6 == 5000000000LL) cout << "✅ Тест 6 пройден" << endl;
    else cout << "❌ Тест 6 не пройден (ожидалось 5000000000, получено " << r6 << ")" << endl;
}

int main() {
    run_tests();

    int n, m;
    cin >> n >> m;
    cout << calc_result(n, m) << endl;

    return 0;
}
